server:
  servlet:
    context-path: /bidrag-arbeidsflyt

management:
  endpoints:
    web:
      exposure:
        include: "prometheus,health"

SERVICE_USER_USERNAME: srvBdArbeidsflyt
SERVICE_USER_PASSWORD: ${SRV_BD_ARBEIDSFLYT_PASSWORD}
KAFKA_GROUP_ID: bidrag-arbeidsflyt-oppgave-consumer
KAFKA_MAX_RETRY: 10
REST_MAX_RETRY: 3
SCHEDULER_MAX_RETRY: 20
spring:
  main:
    banner-mode: off
---
spring:
  config.activate.on-profile: nais
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        endpoint.identification.algorithm:
    consumer:
      enableAutoCommit: false
    listener:
      ackMode: RECORD
---
spring.config.activate.on-profile: nais, local
no.nav.security.jwt:
  client:
    registration:
      oppgave:
        resource-url: ${OPPGAVE_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${OPPGAVE_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      person:
        resource-url: ${BIDRAG_PERSON_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${BIDRAG_PERSON_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      organisasjon:
        resource-url: ${BIDRAG_ORGANISASJON_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${BIDRAG_ORGANISASJON_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      dokument:
        resource-url: ${BIDRAG_DOKUMENT_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${BIDRAG_DOKUMENT_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      sak:
        resource-url: ${BIDRAG_SAK_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${BIDRAG_SAK_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
      tilgangskontroll:
        resource-url: ${BIDRAG_TILGANGSKONTROLL_URL}
        token-endpoint-url: https://login.microsoftonline.com/${AZURE_APP_TENANT_ID}/oauth2/v2.0/token
        grant-type: client_credentials
        scope: api://${TILGANGSKONTROLL_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
---
spring:
  config.activate.on-profile: nais
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database: postgresql