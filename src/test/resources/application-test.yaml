DEFAULT_PORT: 1232
logging:
  level:
    root: INFO
BIDRAG_TILGANGSKONTROLL_URL: http://localhost:${wiremock.server.port:0}/tilgangskontroll
OPPGAVE_URL: http://localhost:${wiremock.server.port:0}/oppgave
BIDRAG_ORGANISASJON_URL: http://localhost:${wiremock.server.port:0}/organisasjon
BIDRAG_DOKUMENT_URL: http://localhost:${wiremock.server.port:0}/dokument
BIDRAG_SAK_URL: http://localhost:${wiremock.server.port:0}/sak
BIDRAG_PERSON_URL: http://localhost:${wiremock.server.port:0}/person
TOPIC_OPPGAVE_ENDRET: oppgave-endret
TOPIC_OPPGAVE_HENDELSE: oppgave-hendelse
TOPIC_JOURNALPOST: topic_journalpost
TOPIC_BEHANDLING_HENDELSE: topic_behandling_hendelse
SRV_BD_ARBEIDSFLYT_PASSWORD: test
NAV_TRUSTSTORE_PATH: test
NAV_TRUSTSTORE_PASSWORD: test
KAFKA_GROUP_ID: test
KAFKA_MAX_RETRY: 0
REST_MAX_RETRY: 0
NAIS_APP_NAME: bidrag-dokument-forsendelse
AZURE_ISSUER_URL: http://localhost:${mock-oauth2-server.port:1234}/aad
SERVICE_USER_USERNAME: srvBdArbeidsflyt
SERVICE_USER_PASSWORD: passord
FEATURE_ENABLED: KAFKA_OPPGAVE,OPPRETT_OPPGAVE,LAGRE_JOURNALPOST
OPPGAVE_KAFKA_OFFSET_RESET: earliest
KAFKA_BROKERS: localhost:0000
no.nav.security.jwt:
  client:
    registration:
      oppgave:
        resource-url: ${OPPGAVE_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic
      person:
        resource-url: ${BIDRAG_PERSON_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic
      organisasjon:
        resource-url: ${BIDRAG_ORGANISASJON_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic
      dokument:
        resource-url: ${BIDRAG_DOKUMENT_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic
      sak:
        resource-url: ${BIDRAG_SAK_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: client_credentials
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic
      tilgangskontroll:
        resource-url: ${BIDRAG_TILGANGSKONTROLL_URL}
        token-endpoint-url: http://localhost:${mock-oauth2-server.port:1234}/aad/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://123/.default
        authentication:
          client-id: 123
          client-secret: 123
          client-auth-method: client_secret_basic

#### KAFKA

spring:
  flyway.enabled: false
  datasource.type: com.zaxxer.hikari.HikariDataSource
  datasource.url: jdbc:h2:mem:public;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS JSON;
  h2.console.enabled: true
  jpa.hibernate.hbmddl-auto: create-drop
#  kafka:
#    bootstrap-servers: ${KAFKA_BROKERS}
#    properties:
#      security.protocol: PLAINTEXT
#    consumer:
#      auto-offset-reset: earliest
#      enableAutoCommit: false
#    listener:
#      ackMode: RECORD