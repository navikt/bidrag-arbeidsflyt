name: Build and deploy
on:
  push:
    branches:
      - '**'
      - '!release'

env:
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"
    name: Build with maven and docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn -B -e --settings .m2/maven-settings.xml clean install
      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: bidrag
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-push.outputs.image }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          path: deploy
      - name: Deploy main branch to dev-gcp
        if: github.ref != 'refs/heads/release'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/main.yaml
          IMAGE: ${{ needs.build.outputs.image }}
      - name: Deploy feature to dev-gcp
        if: github.ref != 'refs/heads/main'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/.nais/nais.yaml
          VARS: deploy/.nais/feature.yaml
          IMAGE: ${{ needs.build.outputs.image }}

  run-tests-for-opprett-oppgave:
    runs-on: ubuntu-latest
    name: "Run tests: opprett-oppgave"
    needs: deploy

    env:
      INGRESS_OPPGAVE: https://oppgave.dev-fss-pub.nais.io
      INGRESS_CUCUMBER: https://bidrag-cucumber-cloud.ekstern.dev.nav.no

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_OPPGAVE=https://oppgave-q1.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
                -H "Authorization: Basic ${{ secrets.BIDRAG_CUCUMBER_CLOUD_AUTH }}" \
               --request POST \
               --data '{"tags":["@arbeidsflyt-opprett-oppgave"],"noContextPathForApps":["oppgave"],"ingressesForApps":[
                   "${{ env.INGRESS_OPPGAVE }}@oppgave"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  run-tests-for-endre-fagomrade:
    runs-on: ubuntu-latest
    name: "Run tests: endre-fagomrade"
    needs: deploy

    env:
      INGRESS_CUCUMBER: https://bidrag-cucumber-cloud.ekstern.dev.nav.no
      INGRESS_OPPGAVE: https://oppgave.dev-fss-pub.nais.io

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_OPPGAVE=https://oppgave-q1.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
                -H "Authorization: Basic ${{ secrets.BIDRAG_CUCUMBER_CLOUD_AUTH }}" \
               --request POST \
               --data '{"tags":["@arbeidsflyt-endre-fagomrade"],"noContextPathForApps":["oppgave"],"ingressesForApps":[
                   "${{ env.INGRESS_OPPGAVE }}@oppgave"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  run-tests-for-overfor-enhet:
    runs-on: ubuntu-latest
    name: "Run tests: overfor-til-annen-enhet"
    needs: deploy

    env:
      INGRESS_CUCUMBER: https://bidrag-cucumber-cloud.ekstern.dev.nav.no
      INGRESS_OPPGAVE: https://oppgave.dev-fss-pub.nais.io

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_OPPGAVE=https://oppgave-q1.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
                -H "Authorization: Basic ${{ secrets.BIDRAG_CUCUMBER_CLOUD_AUTH }}" \
               --request POST \
               --data '{"tags":["@arbeidsflyt-overfor-til-annen-enhet"],"noContextPathForApps":["oppgave"],"ingressesForApps":[
                   "${{ env.INGRESS_OPPGAVE }}@oppgave"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)

  run-tests-for-journalforing:
    runs-on: ubuntu-latest
    name: "Run tests for journalforing"
    needs: deploy

    env:
      INGRESS_CUCUMBER: https://bidrag-cucumber-cloud.ekstern.dev.nav.no
      INGRESS_OPPGAVE: https://oppgave.dev-fss-pub.nais.io

    steps:
      - name: feature ingresses
        if: github.ref != 'refs/heads/main'
        run: |
          echo "INGRESS_OPPGAVE=https://oppgave-q1.dev-fss-pub.nais.io" >> $GITHUB_ENV
          echo "INGRESS_CUCUMBER=https://bidrag-cucumber-cloud-feature.ekstern.dev.nav.no" >> $GITHUB_ENV
      - run: |
          curl -H "Content-Type: application/json" -i \
                -H "Authorization: Basic ${{ secrets.BIDRAG_CUCUMBER_CLOUD_AUTH }}" \
               --request POST \
               --data '{"tags":["@arbeidsflyt-journalforing"],"noContextPathForApps":["oppgave"],"ingressesForApps":[
                   "${{ env.INGRESS_OPPGAVE }}@oppgave"
                 ]}' \
               ${{ env.INGRESS_CUCUMBER }}/bidrag-cucumber-cloud/run | tee .cucumber-result
          cat .cucumber-result | grep HTTP/2 | grep -c 200 > /dev/null # fails if count is 0 (http status is not ok, aka http status code is not 200)
